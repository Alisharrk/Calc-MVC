import 'package:flutter/material.dart';

void main() => runApp(MyCalculatorApp());

class MyCalculatorApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Калькулятор',
      home: CalculatorPage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

// ===== MODEL + CONTROLLER =====
class CalculatorLogic {
  String input = '';
  String result = '';

  void addInput(String value) {
    input += value;
  }

  void clear() {
    input = '';
    result = '';
  }

  void calculate() {
    try {
      if (input.contains('+')) {
        var parts = input.split('+');
        result = (double.parse(parts[0]) + double.parse(parts[1])).toString();
      } else if (input.contains('-')) {
        var parts = input.split('-');
        result = (double.parse(parts[0]) - double.parse(parts[1])).toString();
      } else if (input.contains('*')) {
        var parts = input.split('*');
        result = (double.parse(parts[0]) * double.parse(parts[1])).toString();
      } else if (input.contains('/')) {
        var parts = input.split('/');
        result = (double.parse(parts[0]) / double.parse(parts[1])).toString();
      }
    } catch (e) {
      result = 'Ошибка';
    }
  }
}

// ===== VIEW =====
class CalculatorPage extends StatefulWidget {
  @override
  _CalculatorPageState createState() => _CalculatorPageState();
}

class _CalculatorPageState extends State<CalculatorPage> {
  final logic = CalculatorLogic();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Калькулятор')),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.end,
        children: [
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              children: [
                Text(logic.input, style: TextStyle(fontSize: 28)),
                Text(logic.result, style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold)),
              ],
            ),
          ),
          buildButtonRow(['7', '8', '9', '/']),
          buildButtonRow(['4', '5', '6', '*']),
          buildButtonRow(['1', '2', '3', '-']),
          buildButtonRow(['0', '.', '=', '+']),
          buildButtonRow(['C']),
        ],
      ),
    );
  }

  Widget buildButtonRow(List<String> buttons) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
      children: buttons.map((text) => buildButton(text)).toList(),
    );
  }

  Widget buildButton(String text) {
    return Padding(
      padding: const EdgeInsets.all(8.0),
      child: ElevatedButton(
        onPressed: () {
          setState(() {
            if (text == '=') {
              logic.calculate();
            } else if (text == 'C') {
              logic.clear();
            } else {
              logic.addInput(text);
            }
          });
        },
        child: Text(text, style: TextStyle(fontSize: 24)),
      ),
    );
  }
}
